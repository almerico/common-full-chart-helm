
---
# Source: journey-api/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/component: journey-api
    app.kubernetes.io/instance: zde
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: journey-api
    app.kubernetes.io/part-of: de
    app.kubernetes.io/version: 1.16.0
    helm.sh/chart: journey-api-0.1.0
  name: zde-journey-api
spec:
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: 80
  selector:
    app.kubernetes.io/instance: zde
    app.kubernetes.io/name: journey-api
  type: ClusterIP
---
# Source: journey-api/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: journey-api
    app.kubernetes.io/instance: zde
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: journey-api
    app.kubernetes.io/part-of: de
    app.kubernetes.io/version: 1.16.0
    helm.sh/chart: journey-api-0.1.0
  name: zde-journey-api
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: zde
      app.kubernetes.io/name: journey-api
  template:
    metadata:
      annotations: null
      labels:
        app.kubernetes.io/instance: zde
        app.kubernetes.io/name: journey-api
    spec:
      containers:
      - env:
        - name: ZDE_POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: ASPNETCORE_ENVIRONMENT
          value: dev
        - name: Logging__LogLevel__Default
          value: Debug
        image: 492071692632.dkr.ecr.eu-west-2.amazonaws.com/zde/journey-nbo:1.0.450-v2
        imagePullPolicy: Always
        livenessProbe:
          httpGet:
            path: /
            port: 80
        name: journey-api
        ports:
        - containerPort: 80
          name: service
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /
            port: 80
        volumeMounts: null
      serviceAccountName: zde-service
      volumes: null
---
# Source: journey-api/templates/ingress.yaml
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  annotations:
    certmanager.k8s.io/acme-challenge-type: dns01
    certmanager.k8s.io/acme-dns01-provider: route53
    certmanager.k8s.io/cluster-issuer: letsencrypt-default
    kubernetes.io/ingress.class: nginx
    kubernetes.io/tls-acme: "true"
  labels:
    app.kubernetes.io/component: journey-api
    app.kubernetes.io/instance: zde
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: journey-api
    app.kubernetes.io/part-of: de
    app.kubernetes.io/version: 1.16.0
    helm.sh/chart: journey-api-0.1.0
  name: zde-journey-api
spec:
  rules:
  - host: journey-api.dev.zde.jaja.co.uk
    http:
      paths:
      - backend:
          serviceName: zde-journey-api
          servicePort: 80
        path: /
  tls:
  - hosts:
    - journey-api.dev.zde.jaja.co.uk
    secretName: journey-api

